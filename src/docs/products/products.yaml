paths:
  /api/products:
    get:
      summary: Get a list of products
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Number of products per page
          schema:
            type: integer
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: sort
          in: query
          description: Sorting order (e.g., 'asc' or 'desc')
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
        - name: availability
          in: query
          description: Filter by availability (true/false)
          schema:
            type: boolean
        - name: query
          in: query
          description: Search query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
        '500':
          description: Internal Server Error

  /api/products/{pid}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

    post:
      summary: Add a new product
      tags:
        - Products
      requestBody:
        description: Product data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Updated product data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

components:
  schemas:
    ProductList:
      type: object
      properties:
        status:
          type: string
        payload:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        totalPages:
          type: integer
        prevPage:
          type: integer
        nextPage:
          type: integer
        page:
          type: integer
        hasPrevPage:
          type: boolean
        hasNextPage:
          type: boolean
        prevLink:
          type: string
        nextLink:
          type: string

    Product:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        price:
          type: number
        thumbnail:
          type: string
        code:
          type: string
        stock:
          type: number
        category:
          type: string
        availability:
          type: boolean

    ProductInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
        thumbnail:
          type: string
        code:
          type: string
        stock:
          type: number
        category:
          type: string
        availability:
          type: boolean